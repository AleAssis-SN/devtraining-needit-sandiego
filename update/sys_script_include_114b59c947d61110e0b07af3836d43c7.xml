<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_58872_needit.NeedItUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Utils Script Include for the NeedIt application.</description>
        <name>NeedItUtils</name>
        <script><![CDATA[var NeedItUtils = Class.create();
NeedItUtils.prototype = {
    initialize: function() {},

    isDatePast: function(strDate) {
        // Create GlideDateTime objects for the current date and the passed in date
        var rightnow = new GlideDateTime();
        var testdate = new GlideDateTime(strDate);

        // If the testdate is before rightnow, return true, else return false
        if (testdate.before(rightnow)) {
            return true;
        } else {
            return false;
        }
    },

    validateEmailAddress: function(emailStr) {
        // Use JavaScript coercion to guarantee emailStr is a string
        emailStr = emailStr + '';
        // Compare emailStr against the allowed syntax as specified in the regular expression
        // If emailStr has allowed syntax, return true, else return false
        if (emailStr.match(/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/)) {
            return true;
        } else {
            return false;
        }
    },
    getLeadTimeByReqType: function(reqType, defaultValue) {

        var leadtime = defaultValue * 1;
        gs.debug("Leadtime initiated with {0}", leadtime);
        gs.debug("reqType is {0}", reqType);
        var ltrecord = new GlideRecord('x_58872_needit_needit_leadtime');
        ltrecord.addQuery('request_type', reqType);
        ltrecord.query();
        if (ltrecord.next()) {
            gs.debug("Found Leadtime Record");
            leadtime = ltrecord.getValue('leadtime_in_hours');
            gs.debug("New leadtime is {0}", leadtime);
        } else {
            gs.debug("Not Found Leadtime Record");
        }
        return leadtime;
    },

    type: 'NeedItUtils'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-09-30 21:29:56</sys_created_on>
        <sys_id>114b59c947d61110e0b07af3836d43c7</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>NeedItUtils</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_include_114b59c947d61110e0b07af3836d43c7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-09-30 21:35:54</sys_updated_on>
    </sys_script_include>
</record_update>
