<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>NeedIt When needed field date</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    // rightnow stores the current time
    //var rightnow = new GlideDateTime();
    // Create a GlideDateTime object for the When needed date
    //var whenNeeded = new GlideDateTime(current.u_when_needed);
    var niutils = new NeedItUtils();
    var isPast = niutils.isDatePast(current.u_when_needed);

    // If the When needed date is before rightnow, do not write the record to the database
    // Output an error message to the screen
    if (isPast == true) {
        gs.addErrorMessage("When needed date cannot be in the past.  Your request has not been saved to the database.");
        current.setAbortAction(true);
    } else {
        var reqType = current.getValue('u_request_type');
        var leadtime = niutils.getLeadTimeByReqType(reqType, 12);
        //        var leadtime = 12;
        //		gs.debug("Not in the past, leadtime initiated with {0}", leadtime);
        //        var ltrecord = new GlideRecord('x_58872_needit_needit_leadtime');
        //		var reqType = current.getValue('u_request_type');
        //		gs.debug("reqType is {0}",reqType);
        //        ltrecord.addQuery('request_type', reqType);
        //        ltrecord.query();
        //        if (ltrecord.next()) {
        //			gs.debug("Found Leadtime Record");
        //            leadtime = ltrecord.getValue('leadtime_in_hours');
        //			gs.debug("New leadtime is {0}",leadtime);
        //        } else {
        //			gs.debug("Not Found Leadtime Record");
        //		}

        // Mindate will contain the minimum date available => now + leatime hours
        var minDate = new GlideDateTime();
        minDate.addSeconds(leadtime * 60 * 60);
        gs.debug("MinDate is " + minDate.getDisplayValue());
        var whenNeeded = new GlideDateTime(current.u_when_needed);
        if (whenNeeded.before(minDate)) {
            gs.addErrorMessage("A minimum of " + leadtime + " hours is the required leadtime for any request of type " + reqType + ".");
            current.setAbortAction(true);
        }

    }


})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-09-26 21:59:54</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>9ccbb4fb47861110e0b07af3836d43c1</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name>NeedIt When needed field date</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_9ccbb4fb47861110e0b07af3836d43c1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-09-30 21:43:45</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=9ccbb4fb47861110e0b07af3836d43c1"/>
</record_update>
